{"name": "test_forms", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"radio\" id=\"color4\" name=\"fav_color\" value=\"Green\" data-cy=\"color4\" data-testid=\"color4\"> is not clickable at point (66, 6). Other element would receive the click: <img width=\"180\" height=\"50\" src=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" class=\"attachment-full size-full\" alt=\"automateNow Logo\" loading=\"eager\" decoding=\"async\" data-attachment-id=\"12476\" data-permalink=\"https://practice-automation.com/automatenow-logo-2/\" data-orig-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" data-orig-size=\"180,50\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"automateNow Logo\" data-image-description=\"<p>menu bar</p>\n\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" data-large-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\">\n  (Session info: chrome=138.0.7204.101)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7dcefe935+77845]\n\tGetHandleVerifier [0x0x7ff7dcefe990+77936]\n\t(No symbol) [0x0x7ff7dccb9cda]\n\t(No symbol) [0x0x7ff7dcd186a9]\n\t(No symbol) [0x0x7ff7dcd16042]\n\t(No symbol) [0x0x7ff7dcd13081]\n\t(No symbol) [0x0x7ff7dcd11f81]\n\t(No symbol) [0x0x7ff7dcd036c8]\n\t(No symbol) [0x0x7ff7dcd388ca]\n\t(No symbol) [0x0x7ff7dcd02f76]\n\t(No symbol) [0x0x7ff7dcd38ae0]\n\t(No symbol) [0x0x7ff7dcd60b07]\n\t(No symbol) [0x0x7ff7dcd386a3]\n\t(No symbol) [0x0x7ff7dcd01791]\n\t(No symbol) [0x0x7ff7dcd02523]\n\tGetHandleVerifier [0x0x7ff7dd1d684d+3059501]\n\tGetHandleVerifier [0x0x7ff7dd1d0c0d+3035885]\n\tGetHandleVerifier [0x0x7ff7dd1f0400+3164896]\n\tGetHandleVerifier [0x0x7ff7dcf18c3e+185118]\n\tGetHandleVerifier [0x0x7ff7dcf2054f+216111]\n\tGetHandleVerifier [0x0x7ff7dcf072e4+113092]\n\tGetHandleVerifier [0x0x7ff7dcf07499+113529]\n\tGetHandleVerifier [0x0x7ff7dceee298+10616]\n\tBaseThreadInitThunk [0x0x7ffe2ae77374+20]\n\tRtlUserThreadStart [0x0x7ffe2be7cc91+33]", "trace": "@allure.description(\"Test about link\")\n    def test_forms():\n        options = webdriver.ChromeOptions()\n        driver = (webdriver.Chrome(options=options))\n    \n        print(\"Старт тест\")\n    \n        input_forms = Forms_page(driver)\n>       input_forms.forms_input()\n\ntest_res\\test_input_forms.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\input_forms.py:166: in forms_input\n    self.click_color4()\npages\\input_forms.py:118: in click_color4\n    self.get_color4().click()\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020E9FDED2D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff7dceee298+10616]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffe2ae77374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe2be7cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"radio\" id=\"color4\" name=\"fav_color\" value=\"Green\" data-cy=\"color4\" data-testid=\"color4\"> is not clickable at point (66, 6). Other element would receive the click: <img width=\"180\" height=\"50\" src=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" class=\"attachment-full size-full\" alt=\"automateNow Logo\" loading=\"eager\" decoding=\"async\" data-attachment-id=\"12476\" data-permalink=\"https://practice-automation.com/automatenow-logo-2/\" data-orig-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" data-orig-size=\"180,50\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"automateNow Logo\" data-image-description=\"<p>menu bar</p>\nE       \" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" data-large-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\">\nE         (Session info: chrome=138.0.7204.101)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7dcefe935+77845]\nE       \tGetHandleVerifier [0x0x7ff7dcefe990+77936]\nE       \t(No symbol) [0x0x7ff7dccb9cda]\nE       \t(No symbol) [0x0x7ff7dcd186a9]\nE       \t(No symbol) [0x0x7ff7dcd16042]\nE       \t(No symbol) [0x0x7ff7dcd13081]\nE       \t(No symbol) [0x0x7ff7dcd11f81]\nE       \t(No symbol) [0x0x7ff7dcd036c8]\nE       \t(No symbol) [0x0x7ff7dcd388ca]\nE       \t(No symbol) [0x0x7ff7dcd02f76]\nE       \t(No symbol) [0x0x7ff7dcd38ae0]\nE       \t(No symbol) [0x0x7ff7dcd60b07]\nE       \t(No symbol) [0x0x7ff7dcd386a3]\nE       \t(No symbol) [0x0x7ff7dcd01791]\nE       \t(No symbol) [0x0x7ff7dcd02523]\nE       \tGetHandleVerifier [0x0x7ff7dd1d684d+3059501]\nE       \tGetHandleVerifier [0x0x7ff7dd1d0c0d+3035885]\nE       \tGetHandleVerifier [0x0x7ff7dd1f0400+3164896]\nE       \tGetHandleVerifier [0x0x7ff7dcf18c3e+185118]\nE       \tGetHandleVerifier [0x0x7ff7dcf2054f+216111]\nE       \tGetHandleVerifier [0x0x7ff7dcf072e4+113092]\nE       \tGetHandleVerifier [0x0x7ff7dcf07499+113529]\nE       \tGetHandleVerifier [0x0x7ff7dceee298+10616]\nE       \tBaseThreadInitThunk [0x0x7ffe2ae77374+20]\nE       \tRtlUserThreadStart [0x0x7ffe2be7cc91+33]\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "Test about link", "steps": [{"name": "Input forms", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"radio\" id=\"color4\" name=\"fav_color\" value=\"Green\" data-cy=\"color4\" data-testid=\"color4\"> is not clickable at point (66, 6). Other element would receive the click: <img width=\"180\" height=\"50\" src=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" class=\"attachment-full size-full\" alt=\"automateNow Logo\" loading=\"eager\" decoding=\"async\" data-attachment-id=\"12476\" data-permalink=\"https://practice-automation.com/automatenow-logo-2/\" data-orig-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" data-orig-size=\"180,50\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"automateNow Logo\" data-image-description=\"<p>menu bar</p>\n\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\" data-large-file=\"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-Logo.png?fit=180%2C50&amp;ssl=1\">\n  (Session info: chrome=138.0.7204.101)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7dcefe935+77845]\n\tGetHandleVerifier [0x0x7ff7dcefe990+77936]\n\t(No symbol) [0x0x7ff7dccb9cda]\n\t(No symbol) [0x0x7ff7dcd186a9]\n\t(No symbol) [0x0x7ff7dcd16042]\n\t(No symbol) [0x0x7ff7dcd13081]\n\t(No symbol) [0x0x7ff7dcd11f81]\n\t(No symbol) [0x0x7ff7dcd036c8]\n\t(No symbol) [0x0x7ff7dcd388ca]\n\t(No symbol) [0x0x7ff7dcd02f76]\n\t(No symbol) [0x0x7ff7dcd38ae0]\n\t(No symbol) [0x0x7ff7dcd60b07]\n\t(No symbol) [0x0x7ff7dcd386a3]\n\t(No symbol) [0x0x7ff7dcd01791]\n\t(No symbol) [0x0x7ff7dcd02523]\n\tGetHandleVerifier [0x0x7ff7dd1d684d+3059501]\n\tGetHandleVerifier [0x0x7ff7dd1d0c0d+3035885]\n\tGetHandleVerifier [0x0x7ff7dd1f0400+3164896]\n\tGetHandleVerifier [0x0x7ff7dcf18c3e+185118]\n\tGetHandleVerifier [0x0x7ff7dcf2054f+216111]\n\tGetHandleVerifier [0x0x7ff7dcf072e4+113092]\n\tGetHandleVerifier [0x0x7ff7dcf07499+113529]\n\tGetHandleVerifier [0x0x7ff7dceee298+10616]\n\tBaseThreadInitThunk [0x0x7ffe2ae77374+20]\n\tRtlUserThreadStart [0x0x7ffe2be7cc91+33]\n\n", "trace": "  File \"C:\\Users\\d.milyakova\\Desktop\\testUa\\pythonProject2\\pages\\input_forms.py\", line 166, in forms_input\n    self.click_color4()\n  File \"C:\\Users\\d.milyakova\\Desktop\\testUa\\pythonProject2\\pages\\input_forms.py\", line 118, in click_color4\n    self.get_color4().click()\n  File \"C:\\Users\\d.milyakova\\Desktop\\testUa\\pythonProject2\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\d.milyakova\\Desktop\\testUa\\pythonProject2\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 570, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\d.milyakova\\Desktop\\testUa\\pythonProject2\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\d.milyakova\\Desktop\\testUa\\pythonProject2\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1753428783724, "stop": 1753428790932}], "attachments": [{"name": "stdout", "source": "535c52a3-43fd-4113-ae06-8f62b827d8ed-attachment.txt", "type": "text/plain"}], "start": 1753428781830, "stop": 1753428790953, "uuid": "b6be74d1-2dff-466d-9e27-40b89cf28b5f", "historyId": "e607e87654020cdb115cbdd01b5f1ebb", "testCaseId": "e607e87654020cdb115cbdd01b5f1ebb", "fullName": "test_res.test_input_forms#test_forms", "labels": [{"name": "parentSuite", "value": "test_res"}, {"name": "suite", "value": "test_input_forms"}, {"name": "host", "value": "dmilyakova"}, {"name": "thread", "value": "17756-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_res.test_input_forms"}]}